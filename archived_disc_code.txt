// sync happens almost immediately after init
void ble_on_sync()
{
    ble_hs_id_infer_auto(0, &ble_addr_type);

    printf("Start scanning... \n");
    struct ble_gap_disc_params disc_params; // parameters for advertising
    disc_params.filter_duplicates = 1;
    disc_params.passive = 0;
    disc_params.itvl = 0;
    disc_params.window = 0;
    disc_params.filter_policy = 0;
    disc_params.limited = 0;

    // advertising - advertise characteristics to scans made by other bt devices
    // discovery - scan bt devices around
    // ble_gap_event = handler when something happens in gap stage
    ble_gap_disc(ble_addr_type, BLE_HS_FOREVER, &disc_params, ble_gap_on_event, NULL);
}

int ble_gap_on_event(struct ble_gap_event *event, void *arg)
{
    struct ble_hs_adv_fields fields;

    switch (event->type)
    {
    case BLE_GAP_EVENT_DISC:
    {
        ble_hs_adv_parse_fields(&fields, event->disc.data, event->disc.length_data);
        char stringified_device_name[fields.name_len];
        int i;
        for (i = 0; i < fields.name_len; i++)
        {
            stringified_device_name[i] = fields.name[i];
        }
        stringified_device_name[i] = '\0';
        if (!strcmp(stringified_device_name, "OFIR"))
        {
            printf("found OFIR\n");
            
        }
        break;
    }
    default:
        break;
    }
    return 0;
}